[General]
network = AirTrafficControl
cpu-time-limit = 300s
debug-on-errors = true
simtime-resolution = ms
ned-path = ./..
**.airspace.totalSamples = 1000000  # Number of statistic samples to collect before ending the simulation (max 2^31-1, otherwise an overflow occurs due to the NED "int" type)
result-dir = /media/luigi/88A4ABD5A4ABC3D2/results
#RNG Management
num-rngs = 4
airspace.rng-0 = 0			#seed for the airplanes interarrival rate	(nextArrival)
airspace.rng-1 = 1			#seed for the airplanes landing time		(nextLandingTime)
parkingarea.rng-0 = 2		#seed for the airplanes parking time		(nextParkingTime)
parkingarea.rng-1 = 3  		#seed for the airplanes takeoff time		(nextTakeoffTime)
repeat = 500 				#number of repetitions of the same run with different seeds
seed-set = ${repetition}	#Use a different seed for each repetition

[Config DeterministicRegime]
#Constant Interarrivals
# Note: these are default values defined in NED
**.airspace.isInterArrivalTimeRandom = false
**.airspace.isLandingTimeRandom = false
**.parkingarea.isParkingTimeRandom = false
**.parkingarea.isTakeoffTimeRandom = false

[Config ExponentialRegime]
#Constant Interarrivals
**.airspace.isInterArrivalTimeRandom = true
**.airspace.isLandingTimeRandom = true
**.parkingarea.isParkingTimeRandom = true
**.parkingarea.isTakeoffTimeRandom = true

[Config DeterministicRegimeOverloaded]
extends = DeterministicRegime
description = "Deterministic regime, overloaded"
#Airplains arrive too frequently, holding queue blows up (interArrivalTime > landingTime + takeoffTime)
#Constraint expression, cfr. OMNeT++ 5.5 Manual (9.4.5 Constraint Expression)
**.airspace.interArrivalTime = ${iat = 15min..30min step 3}
**.airspace.landingTime = ${lt = 15min..30min step 3}
**.parkingarea.takeoffTime = ${tot = 15min..30min step 3}
**.parkingarea.parkingTime = ${pt = 15min..30min step 3}
constraint = ($iat) < ($lt) + ($tot)

[Config ExponentialRegimeOverloaded]
extends = ExponentialRegime
description = "Exponential regime, overloaded"
**.airspace.interArrivalTime = ${iat = 15min..30min step 3}
**.airspace.landingTime = ${lt = 15min..30min step 3}
**.parkingarea.takeoffTime = ${tot = 15min..30min step 3}
**.parkingarea.parkingTime = ${pt = 15min..30min step 3}
constraint = ($iat) < ($lt) + ($tot)

[Config DeterministicRegimeBalanced]
extends = DeterministicRegime
description = "Deterministic regime, balanced"
**.airspace.interArrivalTime = ${iat = 60min..90min step 30}
**.airspace.landingTime = ${lt = 15min..30min step 5}
**.parkingarea.takeoffTime = ${tot = 15min..30min step 5}
**.parkingarea.parkingTime = ${pt = 60min..90min step 30}
constraint = ($iat) = ($lt) + ($tot)

[Config ExponentialRegimeBalanced]
extends = ExponentialRegime
description = "Exponential regime, balanced"
**.airspace.interArrivalTime = ${iat = 60min..90min step 15}
**.airspace.landingTime = ${lt = 15min..30min step 5}
**.parkingarea.takeoffTime = ${tot = 15min..30min step 5}
**.parkingarea.parkingTime = ${pt = 60min..90min step 15}
constraint = ($iat) = ($lt) + ($tot)
**.warmup = ${$iat + $lt + $pt}
**.scaling = 5

[Config DeterministicRegimeStable]
extends = DeterministicRegime
description = "Deterministic regime, stable"
**.airspace.interArrivalTime = ${iat = 60min..90min step 5}
**.airspace.landingTime = ${lt = 15min..30min step 5}
**.parkingarea.takeoffTime = ${tot = 15min..30min step 5}
**.parkingarea.parkingTime = ${pt = 60min..90min step 5}
**.vector-recording = false
**.scalar-recording = true
constraint = ($iat) >= ($lt) + ($tot)
**.warmup = ${$iat + $lt + $pt}
**.scaling = 5

[Config ExponentialRegimeStable]
extends = ExponentialRegime
description = "Exponential regime, stable"
**.airspace.interArrivalTime = ${iat = 60min..90min step 30}
**.airspace.landingTime = ${lt = 15min..30min step 15}
**.parkingarea.takeoffTime = ${tot = 15min..30min step 15}
**.parkingarea.parkingTime = ${pt = 60min..90min step 30}
constraint = ($iat) > ($lt) + ($tot)
**.warmup = ${$iat + $lt + $pt}
**.scaling = 5

[Config Debug]
extends = ExponentialRegime
description = "Configuration used for debugging purposes"
**.airspace.interArrivalTime = ${iat = 50}
**.airspace.landingTime = ${lt = 15}
**.parkingarea.takeoffTime = ${tot = 20}
**.parkingarea.parkingTime = ${pt = 60}
**.warmup = 1000
**.scaling = 5

[Config Analysis]
extends = ExponentialRegime
description = "Configuration used for 2^k*r factorial analysis"
**.airspace.interArrivalTime = ${iat = 60, 100}
**.airspace.landingTime = ${lt = 10, 25}
**.parkingarea.takeoffTime = ${tot = 10, 25}
**.parkingarea.parkingTime = ${pt = 60, 120}
**.vector-recording = false
**.scalar-recording = true
**.warmup = 200000
**.scaling = 1
